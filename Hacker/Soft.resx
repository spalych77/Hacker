<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAC7BAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAABIJJ
        REFUeNrt3T9y2lgAx/FfwLSUMAk+TIYLuMsJfIIU7jyTme1c5AS+hC/A+C4ex0lKWg9mGy8rZTZrBCg8
        oc/HTTLhj/P0RTzxJDsBAAAAAAAAAAAAALrtXaNbDzPJ0KAVa5WfWTW7y1mjW09yl1lejHSRBnnMRZ7a
        DGCYWT4Y6YI13j8PGt7eq79kO2ydwemNAgJAAGznbI/73mfhoPDIVpnn47ECWOQvW6AAewWwz1uAV38J
        9twK5gA9JwABNOBjoNI13kJvTwLHGW8efOZ9v2jDzCov6mWWhwjgMld53jzBxCgXbJK7zWrgKDf5epg9
        wNTIdmYP8L625bZgEthzAhAAAhBPb1/CzdYClrnN8vU8wkEWRr8Ai/xz9L/OOJfbTf2a+JL15uvBEUHR
        pnmobK0vbexARka5YDtsHe/jPScAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgA
        ASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAA
        AkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAhAAAkAACAABIAAEgAAQAAJAAAgA
        ASAABIAAEAACoLcBvBiygu2wdc4a3XqYWew1yt38swzbDWCSu6yMdLGGmbS9B3hvlE+L3bkAEAACoJ+a
        TQKXuc0y7wxbkdYZ5zLjdgO4yQ8jXaxpPjUNoOlbwMgoF2yHrWMO0HMCEAACQAAIAAEgAASAAH7n2ZAV
        bIet02wtYJyrzWLQIIvcG/Oj+5j568mg64ybrgQ0D+Bz7e8COL55rve5+z5zAKeIl2DPrWAS2HMCEMDO
        1oavAHtuhbcngcv82BxeDDOpXHsyztQJIkf2XJv3r/Jzc+HOKMttHuDt8/v+PbR4ySx3lUtDlts9Ba2q
        Hvo95SKPm736Vttnmz3AstbYfz81JVjlMd+a3WXQ4q358wat34GeF0O/AzDrL9kOW6f5hSFdmPitMs/H
        ynfd9HqmX6+xuc+i+Y9eOALHZRvXWW++HjJtfP9pHiqPcH2CI/TqVOcA9ddr813j6H8eTQAIAAEUbV3w
        oxXl7GT+J9WFqucDH6tUl72qCy4CKMgkd5ltzo85bACX+fT6p0Eec5EnAZS4B5jlQ0uPXV/2OqljglOa
        A7yc0LMIAAEggIMY/cF7dc7pTALrqss3uyyRVJe96ktLFOq8xeWb+tLS+SkNWz8Wg8p6NAEgAARwYPUP
        aNpcDDqpj4K6fRRQv2hlWPuXw1219PzLB8HV35vU+ZOwuv2Tvz/n6jeXrR12w1TXAuqXX93kqz3AMfcA
        0y022WHVf29S56+NMgnsOQEIAAF01fFPzer8yWFdmwRWr9hZZX7072eeVBadbl2Z07bzfK8szJT19b2L
        y0Tdewso92eVdvKnqJoE9pwABOA77vOLqWtHAas8psz1uEEeu3hQ2LXFoPqST2lxntRFYwAAAAAAAAAA
        AAAAAAAAAAAAABzN36MZA5lLevRzAAAAAElFTkSuQmCC
</value>
  </data>
</root>